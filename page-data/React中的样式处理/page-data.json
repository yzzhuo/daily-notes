{"componentChunkName":"component---node-modules-gatsby-theme-blog-src-templates-post-js","path":"/React中的样式处理","webpackCompilationHash":"a33831b61060aa09b70d","result":{"data":{"post":{"id":"8dd93702-f0f5-58e3-8f20-4d55e1581b7b","title":"React中的样式处理","date":"June 20, 2017","excerpt":" 最近有在写react应用了，以前总是图简单，直接用inline style。趁着有空，总结一下除了inline style之外更优的react样式处理方法。 1.classname库 便于给组件动态设置className。 CSS Modules…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React中的样式处理\",\n  \"date\": \"2017-06-20T23:13:58.000Z\",\n  \"tags\": \"前端框架\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \" \\u6700\\u8FD1\\u6709\\u5728\\u5199react\\u5E94\\u7528\\u4E86\\uFF0C\\u4EE5\\u524D\\u603B\\u662F\\u56FE\\u7B80\\u5355\\uFF0C\\u76F4\\u63A5\\u7528inline style\\u3002\\u8D81\\u7740\\u6709\\u7A7A\\uFF0C\\u603B\\u7ED3\\u4E00\\u4E0B\\u9664\\u4E86inline style\\u4E4B\\u5916\\u66F4\\u4F18\\u7684react\\u6837\\u5F0F\\u5904\\u7406\\u65B9\\u6CD5\\u3002\"), mdx(\"p\", null, \"1.classname\\u5E93\"), mdx(\"p\", null, \"\\u4FBF\\u4E8E\\u7ED9\\u7EC4\\u4EF6\\u52A8\\u6001\\u8BBE\\u7F6EclassName\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"impoert React, { Componet } from 'react';\\nimport classNames from 'classnames';\\n\\nclass Button extends Component {\\n  render() {\\n    const btnClass = classNames({\\n      'btn': true,\\n      'btn-pressed': this.state.isPressed,\\n      'btn-over': !this.state.isPressed && this.state.isHovered,\\n    });\\n    return <button className={btnClass}>{this.props.label}</button>\\n  }\\n}\\n\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"CSS Modules\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5B9E\\u73B0\\u7EC4\\u4EF6\\u6837\\u5F0F\\u7684\\u5C40\\u90E8\\u4F5C\\u7528\\u57DF\\u548C\\u6A21\\u5757\\u4F9D\\u8D56\\u95EE\\u9898\\u3002\\n\\u4F7F\\u7528\\u65B9\\u6CD5 :\\nwebpack\\u7684css-loader\\u5185\\u7F6E\\u4E86CSS Modules\\u529F\\u80FD\\uFF0C\\u6240\\u4EE5\\u4F7F\\u7528CSS Modules\\u9996\\u5148\\u8981\\u5728webpack\\u914D\\u7F6E\\u4E2D\\u542F\\u7528css Modules\\uFF0C\\u5982\\u4E0B\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"css?modules&localIdentName=[name]__[local]-[hash:base64:5]\\n\")), mdx(\"p\", null, \"\\u200B\\t\\u5176\\u4E2D\\u52A0\\u4E0Amodules\\u5373\\u4E3A\\u542F\\u7528\\uFF0ClocalIdentName\\u662F\\u8BBE\\u7F6E\\u6837\\u5F0F\\u7684\\u547D\\u540D\\u89C4\\u5219\\u3002\\n\\u200B\\t\\u63A5\\u7740\\u5728\\u7EC4\\u4EF6\\u6587\\u4EF6\\u4E2D\\u5C06css\\u6837\\u5F0Fimport\\u8FDB\\u6765\\u4F7F\\u7528\\u5373\\u53EF\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".normal {\\n  color: #eee;\\n}\\nimport style from './styles.css';\\nclass Button extends Component {\\n  render(){\\n    return <button className={style.normal}></button>    \\n  }\\n}\\n\")), mdx(\"p\", null, \"\\u5176\\u5B83\\u6CE8\\u610F\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5168\\u5C40\\u6837\\u5F0F\\uFF1ACSS Module\\u9ED8\\u8BA4\\u91C7\\u7528\\u4E86\\u5C40\\u90E8\\u6837\\u5F0F\\uFF0C\\u5373\\u6837\\u5F0F\\u5916\\u7528:local\\u5305\\u88F9\\uFF0C\\u751F\\u6210\\u7684css\\u540D\\u5B57\\u9644\\u52A0\\u4E86\\u4E00\\u4E32\\u968F\\u673A\\u6570\\uFF0C\\u4EE5\\u6B64\\u6765\\u5B9E\\u73B0\\u6837\\u5F0F\\u7684\\u5C40\\u90E8\\u5316\\u3002\\n\\u81EA\\u5DF1\\u53EF\\u4EE5\\u7528:global\\u6765\\u5B9E\\u73B0\\u5168\\u5C40\\u6837\\u5F0F\\u3002\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \":global(.btn) {\\n\\u2026\\n}\\n// more than one syle in gloabl\\n:global {\\n.normal{\\n ...\\n}\\n.danger{\\n  ...\\n  }\\n}\\n\")), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"start\": 2\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u6837\\u5F0F\\u590D\\u7528\\uFF1A\\u4F7F\\u7528compose\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".base{\\n  //\\u901A\\u7528\\u6837\\u5F0F\\n}\\n.normal{\\n    composes:base;\\n      //normal\\u72EC\\u6709\\u6837\\u5F0F\\n}\\n\")), mdx(\"p\", null, \"\\u200B\\t\\u6B64\\u65F6\\u4F7F\\u7528\\u4E86normal\\u6837\\u5F0F\\u7684\\u5143\\u7D20\\u6216\\u8005\\u7EC4\\u4EF6\\u5B9E\\u9645\\u4F1A\\u751F\\u6210\\u4E24\\u4E2Aclass\\u3002\"), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"CSS Modules\\u53EA\\u4F1A\\u8F6C\\u6362class\\u540D\\u76F8\\u5173\\u7684\\u6837\\u5F0F\\uFF0C\\u5373\\u53EA\\u4F1A\\u8F6C\\u53D8\\u7C7B\\u9009\\u62E9\\u5668\\u3002\\u6240\\u4EE5id\\u9009\\u62E9\\u5668\\u6216\\u8005\\u5176\\u4ED6\\u5C5E\\u6027\\u9009\\u62E9\\u5668\\u7684\\u6837\\u5F0F\\u4E0D\\u4F1A\\u88ABcss modules\\u8FDB\\u884C\\u8F6C\\u5316\\u3002\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"CSS Mdoules\\u7ED3\\u5408classNames\\u5728react\\u4E2D\\u7684\\u5E94\\u7528\\uFF1A\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"...\\nimport className from 'classnames';\\nimport styles from './styles.css';\\n\\nclass Dialog extends Component {\\n    render() {\\n    const cx = classNames({\\n      confirm: !this.state.disabled,\\n      disabledConfirm: this.state.disabled,\\n    });\\n      return (\\n          <div className={styles.root}>\\n            <a className={styles[cx]}>Confirm</a>    \\n        </div>\\n      )\\n    }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u7ED3\\u5408react-css-modules\\u5E93\\uFF0C\\u907F\\u514D\\u91CD\\u590D\\u8F93\\u5165styles.xx\\u3002\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \" //....\\nimport CSSModules from 'react-css-modules';\\n //...\\n    return (\\n         <div styleName={root}>\\n            <a styleName={cx}>Confirm</a>    \\n        </div>\\n    )\\n export default CSSModules(Dialog, styles);\\n\")))), mdx(\"p\", null, \"\\u5176\\u5B83\\uFF1A\"), mdx(\"p\", null, \"ts\\u4E2Dimport css\\u6587\\u4EF6\\u7684\\u65F6\\u5019\\u62A5\\u9519\\u3002\"), mdx(\"p\", null, \"\\u89E3\\u51B3\\u65B9\\u6CD5\\uFF1A\\u589E\\u52A0\\u4E00\\u4E2Amodule definition\\u544A\\u8BC9typescript\\u53EF\\u4EE5import css\\u6587\\u4EF6\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// declaration.d.ts\\ndeclare module '*.css' {\\n    const content: any;\\n    export default content;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"June's blog"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"8dd93702-f0f5-58e3-8f20-4d55e1581b7b","excerpt":" 最近有在写react应用了，以前总是图简单，直接用inline style。趁着有空，总结一下除了inline style之外更优的react样式处理方法。 1.classname库 便于给组件动态设置className。 CSS Modules…","slug":"/React中的样式处理","title":"React中的样式处理","date":"June 20, 2017","siteTitle":"June's blog","socialLinks":[{"name":"twitter","url":"https://twitter.com/yzzhuo"},{"name":"github","url":"https://github.com/yzzhuo"}],"previous":{"node":{"id":"4c0ff3a2-0dd6-5e53-8464-dfbbcb844ce8","excerpt":" 上周写样式，UI小哥给我了一张png图，但是要实现阴影。然后，第一想到的就是用box-shadow，然而写好之后才发现图片虽然是一个类圆形的图案，但是在css中它是个盒子，也就是在css…","slug":"/原来除了box-shadow,还有drop-shadow","title":"原来除了box-shadow,还有drop-shadow","date":"June 01, 2017"}},"next":{"node":{"id":"c69aa850-21a8-5704-b119-2aa3368d4d73","excerpt":"…","slug":"/状态模式","title":"javascript设计模式-状态模式","date":"June 23, 2017"}}}}}