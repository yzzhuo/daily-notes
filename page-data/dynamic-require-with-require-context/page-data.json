{"componentChunkName":"component---node-modules-gatsby-theme-blog-src-templates-post-js","path":"/dynamic-require-with-require-context","webpackCompilationHash":"977631818b9a7920635c","result":{"data":{"post":{"id":"9dd473ec-8d01-5e72-9f8e-213724148f29","title":"dynamic require with require.context","date":"August 06, 2019","excerpt":"There are some situations that we want to require multiple files and the files we required is changing most of the time. Although using…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"dynamic require with require.context\",\n  \"date\": \"2019-08-06T18:42:57.000Z\",\n  \"tags\": \"webpack\",\n  \"category\": \"daily\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"There are some situations that we want to require multiple files and the files we required is changing most of the time.\"), mdx(\"p\", null, \"Although using expressions like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require('./template/' + name + '.ejs')\"), \" is supported for dynamic requires, it lacks of flexibility I want.\"), mdx(\"p\", null, \"Finally, I found \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require.context\"), \" in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/guides/dependency-management/\"\n  }), \"webpack document\"), \" which can meet my requirements.\"), mdx(\"p\", null, \"its\\u2019 usage is very simple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"require.context(directory, useSubdirectories = false, regExp = /^\\\\.\\\\//);\\n\")), mdx(\"p\", null, \"So, to require all the target files in a directory or matching a pattern, you can require like the code below:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var req = require.context('../components/', true, /\\\\.js$/);\\nfunction importAll (r) {\\n  r.keys().forEach(r);\\n}\\nimportAll(req);\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"req\"), \" has 3 properties, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolve, keys, id\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keys\"), \" is a function that returns an array of all possible requests that the context module can handle, and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"req\"), \" here is an exported function to execute requiring this module we want.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"June's blog"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"9dd473ec-8d01-5e72-9f8e-213724148f29","excerpt":"There are some situations that we want to require multiple files and the files we required is changing most of the time. Although using…","slug":"/dynamic-require-with-require-context","title":"dynamic require with require.context","date":"August 06, 2019","siteTitle":"June's blog","socialLinks":[{"name":"twitter","url":"https://twitter.com/yzzhuo"},{"name":"github","url":"https://github.com/yzzhuo"}],"previous":{"node":{"id":"09d5e100-8dc0-5e8e-9a4b-7ec9efd63fba","excerpt":"In some countries like the U.K and U.S, they always like to use a comma to separete groups of thousands. And I encounter a requirement of…","slug":"/Numer-formatting-in-javascript","title":"Numer formatting in javascript","date":"July 25, 2019"}},"next":null}}}