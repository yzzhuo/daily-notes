{"componentChunkName":"component---node-modules-gatsby-theme-blog-src-templates-posts-js","path":"/","webpackCompilationHash":"a33831b61060aa09b70d","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"posts":[{"node":{"id":"9dd473ec-8d01-5e72-9f8e-213724148f29","excerpt":"There are some situations that we want to require multiple files and the files we required is changing most of the time. Although using…","slug":"/dynamic-require-with-require-context","title":"dynamic require with require.context","date":"August 06, 2019"}},{"node":{"id":"09d5e100-8dc0-5e8e-9a4b-7ec9efd63fba","excerpt":"In some countries like the U.K and U.S, they always like to use a comma to separete groups of thousands. And I encounter a requirement of…","slug":"/Numer-formatting-in-javascript","title":"Numer formatting in javascript","date":"July 25, 2019"}},{"node":{"id":"56921c25-9b31-5e70-887b-5ff60ecadfc9","excerpt":"此教程是基于electron-autoupdater的自动更新方案。研究了一下electron文档原生的autoUpdater模块和elecrtron-builder配套的autoUpdater，最终选择后者是因为实现起来简单太多，而且在macOS和win…","slug":"/基于electron-autoupdater的自动更新方案","title":"基于electron-autoupdater的客户端自动更新方案","date":"March 14, 2018"}},{"node":{"id":"9af695a3-1dc5-5b22-b081-2f52b1e40551","excerpt":"…","slug":"/策略模式","title":"javascript设计模式-策略模式","date":"July 10, 2017"}},{"node":{"id":"0513fb46-1ab0-5973-9c3b-f85c17606bd5","excerpt":"Javascript虽然与传统的面向对象编程语言Java有所不同，但是其设计模式都是围绕着SOLID原则，以便更容易创建可维护和可拓展的系统。 单一职责原则（SRP）：表明软件组件（函数、类、模块）必须庄主与单一的任务（只有单一的职责） 开/闭原则（OCP…","slug":"/面向对象编程的SOLID原则","title":"面向对象编程的SOLID原则","date":"July 08, 2017"}},{"node":{"id":"a41b8356-bd6e-5614-9598-70ac28f6ec8c","excerpt":"…","slug":"/javascript设计模式-单例模式","title":"javascript设计模式-单例模式","date":"June 23, 2017"}},{"node":{"id":"4c12390c-a3e8-598a-afee-51ea204ed3a3","excerpt":"之前对设计模式的学习和实践都是基于Java的。虽说设计模式其实无关语言，仅仅是对某一种问题的特定的一种解决方案和设计思想。但是最近看的曾探写的《Javascript…","slug":"/javascript设计模式-原型模式","title":"javascript设计模式-原型模式","date":"June 23, 2017"}},{"node":{"id":"c69aa850-21a8-5704-b119-2aa3368d4d73","excerpt":"…","slug":"/状态模式","title":"javascript设计模式-状态模式","date":"June 23, 2017"}},{"node":{"id":"8dd93702-f0f5-58e3-8f20-4d55e1581b7b","excerpt":" 最近有在写react应用了，以前总是图简单，直接用inline style。趁着有空，总结一下除了inline style之外更优的react样式处理方法。 1.classname库 便于给组件动态设置className。 CSS Modules…","slug":"/React中的样式处理","title":"React中的样式处理","date":"June 20, 2017"}},{"node":{"id":"4c0ff3a2-0dd6-5e53-8464-dfbbcb844ce8","excerpt":" 上周写样式，UI小哥给我了一张png图，但是要实现阴影。然后，第一想到的就是用box-shadow，然而写好之后才发现图片虽然是一个类圆形的图案，但是在css中它是个盒子，也就是在css…","slug":"/原来除了box-shadow,还有drop-shadow","title":"原来除了box-shadow,还有drop-shadow","date":"June 01, 2017"}},{"node":{"id":"42c25e15-eeee-53c3-9ef6-cc9070bd00a6","excerpt":"最近的工作不大忙，大致是看看现有的代码，熟悉业务，修复一些小问题。而最近对某个项目代码进行webpack优化，得出了关于webpack优化的几个方法。 webpack内置优化工具 webpack.optimize.UglifyJsPlugin…","slug":"/优化webpack","title":"优化webpack","date":"May 20, 2017"}},{"node":{"id":"e1880f21-d2f2-5cfb-9ecf-c4dfcdc74b78","excerpt":"在某群实习的最后一个项目，暂且叫它wps吧，是一个用于针对H5页面的性能分析平台，主要技术栈是react+redux+webpack+antd。其中前端用的是dva框架，后端用的是egg.js…","slug":"/项目总结-wps","title":"项目总结-wps","date":"April 01, 2017"}},{"node":{"id":"45733d48-5485-5323-a25b-4a87bc5e9fa1","excerpt":"之前梳理了下浏览器渲染的大致流程。觉得应该弄清楚它跟前端性能优化的关系，于是结合了渲染的各个过程来整理下如何对网页进行分析和有哪些调优手段。 性能分析 工具 chrome开发者工具的Timeline。（ 传送门->使用说明 ） 指标 60ftps…","slug":"/浏览器渲染性能分析与优化","title":"浏览器渲染性能分析与优化","date":"December 01, 2016"}},{"node":{"id":"41af4994-d478-54a6-a280-44dc4856ce17","excerpt":"…","slug":"/浏览器渲染过程学习总结","title":"浏览器渲染过程学习总结","date":"December 01, 2016"}},{"node":{"id":"d41db733-fb26-5496-8e92-fa4ca1996080","excerpt":"…","slug":"/在创业公司实习的三个月","title":"在创业公司实习的三个月","date":"October 01, 2016"}},{"node":{"id":"23b0bfb8-95a8-5125-a6cc-650cebd86f4c","excerpt":"实习的一个运营后台开发的项目，也许是实习期间对我而言最有挑战性的一次工作，因为这是初次实践angularJS。在边学边做的过程，收获不小，因此想趁着感受还比较深之时把学习和使用AngularJS进行开发的一些体验记录下来（AngularJS 1.x…","slug":"/angularJS初体验","title":"angularJS初体验","date":"September 11, 2016"}},{"node":{"id":"c19ca701-9f49-542a-85b2-371abb749538","excerpt":"…","slug":"/微信支付踩过的坑","title":"微信支付踩过的坑","date":"September 10, 2016"}},{"node":{"id":"baf12900-18e6-5f0d-8c92-8f92902a4324","excerpt":"今天是七夕节，我和工作有个约会。尽管如此，心情还是很高兴，因为在公司负责的第一个项目赶在七夕佳节上线了。虽然是很简单的展示页面，但是做的过程也有了许多的收获，并且和工作伙伴也更加熟悉了，嘿嘿嘿。BUT回校路上的一个追魂夺命Call…","slug":"/前端工程化-gulp应用篇2","title":"前端工程化-gulp应用篇2","date":"August 24, 2016"}},{"node":{"id":"e55efc12-35a7-59c4-9835-30af5451d06a","excerpt":"实习了一个星期，给我的工作还是比较简单的。根据设计稿来实现宣传页面。如果时间回退，接手这类工作，也许我会立刻开始切图，然后写html，css和js…","slug":"/前端工程化-gulp应用篇1","title":"前端工程化-gulp应用篇1","date":"August 23, 2016"}},{"node":{"id":"e2b5c93a-73a2-581e-92fe-c5b7b22a7dbe","excerpt":"我知道好多人，包括以前的自己，都对CSS侧目以待。不就是选择器和一些样式嘛，给我半天的时间就能学会啦。对于css的使用，的确看看W3Cschool可能一下子就会了。但是当实际做项目的时候，你不知道为什么有时候给一些元素设置了宽，高值却不生效；不知道为什么两个inline…","slug":"/CSS-盒模型和视觉格式化上下文","title":"CSS-盒模型和视觉格式化上下文","date":"August 11, 2016"}},{"node":{"id":"bb2c5fed-d555-5f1c-8770-00cd1e08f56d","excerpt":"秋风煞爽，迎来了新学期。稍不留神，时间就把我推到了大学的尾巴，容不得我愿不愿意。所有大四老油条都在给自己的未来定位。人生的定位过程，是一个现实和理想的挣扎。CSS的定位，有时也是呢。继上一篇初略探讨了CSS的视觉格式化上下文后，谈谈CSS定位的那些事吧。 CSS…","slug":"/CSS定位那些事儿","title":"CSS定位那些事儿","date":"August 11, 2016"}},{"node":{"id":"452d5f1d-a176-5d28-87ab-96790c1eb758","excerpt":"昨天经历了一次百度的电话面试（一次带着淡淡忧伤的面试，有时间再写个面筋）被问到BFC这个东西问到傻了。昨晚谷歌看了好多篇关于BFC的文章。在终于理清了BFC这个东西时，突然就有想写篇博文的冲动了呢！（怒~） 在学习BFC这个东西前，先说说FC这两个字的含义吧。\n FC…","slug":"/CSS的BFC","title":"CSS的BFC","date":"August 10, 2016"}},{"node":{"id":"0499d8fe-594d-50c7-9d0c-65796e0dc5c6","excerpt":"随着网页功能变得越来越复杂，同一张网页加载多个JavaScript函数库早已是家常便饭。开发者越来越需要一个工具，对浏览器端的各种库进行管理，比如搜索、自动安装\\卸载、检查更新、确保依赖关系等等。Bower就是为了解决这个问题而诞生的针对浏览器端的库管理工具。 bower…","slug":"/bower入门","title":"bower入门","date":"August 11, 2015"}},{"node":{"id":"ffa1ceaf-b484-56fe-a497-d53dafe43bd0","excerpt":"最近在用AngularJS折腾些东西，打算写一个基于Angular的项目，打算手动创建时被告知可以用Yeoman来生成Angualr项目文件，于是乎去了解了一下Yeoman这玩意。 官网显示Yeoman是一个现代Web app的脚手架工具，这里的脚手架就是说在开发者开发web…","slug":"/用Yeoman来创建我的web应用","title":"用Yeoman来创建我的web应用","date":"August 11, 2015"}}],"siteTitle":"June's blog","socialLinks":[{"name":"twitter","url":"https://twitter.com/yzzhuo"},{"name":"github","url":"https://github.com/yzzhuo"}]}}}